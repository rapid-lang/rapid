
OCAMLC=ocamlc
OCAMLDEP=ocamldep
OCAMLLEX=ocamllex
OCAMLYACC=ocamlyacc

RAPID_OBJS  = ast_helper.cmo parser.cmo scanner.cmo compile.cmo generate.cmo rapid.cmo
PARSER_OBJS = ast_helper.cmo parser.cmo scanner.cmo test_parser.cmo
SAST_OBJS   = ast_helper.cmo parser.cmo scanner.cmo sast_helper.cmo semantic_check.cmo test_sast.cmo

all: clean rapid parser sast

rapid: $(RAPID_OBJS)
	$(OCAMLC) -o rapid $(RAPID_OBJS)

parser: $(PARSER_OBJS)
	$(OCAMLC) -o parser $(PARSER_OBJS)

sast: $(SAST_OBJS)
	$(OCAMLC) -o sast $(SAST_OBJS)

test: all parser_tests.sh sast_tests.sh
	./parser_tests.sh
	./sast_tests.sh

scanner.ml: scanner.mll
	$(OCAMLLEX) scanner.mll

parser.ml parser.mli: parser.mly
	$(OCAMLYACC) parser.mly

%.cmo: %.ml
	$(OCAMLC) -w A -c $<

%.cmi: %.mli
	$(OCAMLC) -w A -c $<

tar: $(TARFILES)
	cd .. && tar czf rapid.tar.gz `git ls-files compiler`


.PHONY: clean parser test all
clean:
	rm -f rapid microc parser sast parser.ml parser.mli scanner.ml \
		*.cmo *.cmi *.out *.diff

# Generated by ocamldep *.ml *.mli
ast_helper.cmo : ast.cmi
ast_helper.cmx : ast.cmi
compile.cmo : ast.cmi
compile.cmx : ast.cmi
generate.cmo :
generate.cmx :
parser.cmo : ast_helper.cmo ast.cmi parser.cmi
parser.cmx : ast_helper.cmx ast.cmi parser.cmi
rapid.cmo : parser.cmi generate.cmo compile.cmo ast_helper.cmo
rapid.cmx : parser.cmx generate.cmx compile.cmx ast_helper.cmx
sast_helper.cmo : sast.cmi
sast_helper.cmx : sast.cmi
semantic_check.cmo : sast_helper.cmo sast.cmi ast_helper.cmo ast.cmi
semantic_check.cmx : sast_helper.cmx sast.cmi ast_helper.cmx ast.cmi
test_parser.cmo : parser.cmi ast_helper.cmo
test_parser.cmx : parser.cmx ast_helper.cmx
test_sast.cmo : semantic_check.cmo parser.cmi
test_sast.cmx : semantic_check.cmx parser.cmx
ast.cmi :
parser.cmi : ast.cmi
sast.cmi : ast.cmi
